// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Checks {
    uint public limit = 10 ether;

    function getBalance(address _address) public view returns (uint256) {
        return _address.balance;
    }

    error InsufficientFunds();
    error SingleTransferLimitExceeded(uint256 amount, uint256 limit);

    function transfer(address payable _receiver, uint256 _amount) public payable {
        assert(limit == 10 ether);

        require(msg.value >= _amount, "Insufficient funds");

        if (_amount > limit) {
            revert SingleTransferLimitExceeded(_amount, limit);
        }

        (bool success, ) = _receiver.call{value: _amount}("");
        require(success, "Transfer failed");
    }
}
